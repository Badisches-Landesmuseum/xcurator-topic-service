# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto-files/AssetService_Asset.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime, timedelta
from typing import Dict, List

import betterproto


class ImageOrientationProto(betterproto.Enum):
    PORTRAIT = 0
    LANDSCAPE = 1


class AssetTypeProto(betterproto.Enum):
    IMAGE = 0
    DOCUMENT = 1
    AUDIO = 2
    VIDEO = 3


@dataclass
class DeleteProjectAssets(betterproto.Message):
    id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    count: int = betterproto.int32_field(3)


@dataclass
class ProjectAsset(betterproto.Message):
    id: str = betterproto.string_field(1)
    project_id: str = betterproto.string_field(2)
    type: "AssetTypeProto" = betterproto.enum_field(3)


@dataclass
class ImageProto(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: "AssetTypeProto" = betterproto.enum_field(2)
    uploaded_time: datetime = betterproto.message_field(3)
    file: "AssetFileProto" = betterproto.message_field(4)
    metadata: "ImageMetadataProto" = betterproto.message_field(5)
    created_at: "GeoLocationProto" = betterproto.message_field(6)
    external_ids: Dict[str, str] = betterproto.map_field(
        7, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    project_id: str = betterproto.string_field(8)
    version: int = betterproto.int64_field(9)
    description: "AssetDescriptionProto" = betterproto.message_field(10)
    preview_url: str = betterproto.string_field(11)


@dataclass
class ImageMetadataProto(betterproto.Message):
    height: int = betterproto.int32_field(1)
    width: int = betterproto.int32_field(2)
    x_resolution: int = betterproto.int32_field(3)
    y_resolution: int = betterproto.int32_field(4)
    orientation: "ImageOrientationProto" = betterproto.enum_field(5)
    color_space: str = betterproto.string_field(6)
    primary_color: str = betterproto.string_field(7)


@dataclass
class GeoLocationProto(betterproto.Message):
    # The latitude in degrees. It must be in the range [-90.0, +90.0].
    latitude: float = betterproto.double_field(1)
    # The longitude in degrees. It must be in the range [-180.0, +180.0].
    longitude: float = betterproto.double_field(2)
    name: str = betterproto.string_field(3)
    country_code: str = betterproto.string_field(4)


@dataclass
class DocumentProto(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: "AssetTypeProto" = betterproto.enum_field(2)
    uploaded_time: datetime = betterproto.message_field(3)
    file: "AssetFileProto" = betterproto.message_field(4)
    metadata: "DocumentMetadataProto" = betterproto.message_field(5)
    external_ids: Dict[str, str] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    project_id: str = betterproto.string_field(7)
    pages: List["DocumentPageProto"] = betterproto.message_field(8)
    version: int = betterproto.int64_field(9)
    description: "AssetDescriptionProto" = betterproto.message_field(10)
    preview_url: str = betterproto.string_field(11)


@dataclass
class DocumentMetadataProto(betterproto.Message):
    word_count: int = betterproto.int32_field(1)
    page_count: int = betterproto.int32_field(2)
    language_name: str = betterproto.string_field(3)


@dataclass
class DocumentPageProto(betterproto.Message):
    id: str = betterproto.string_field(1)
    html: str = betterproto.string_field(2)
    images: List["ImageProto"] = betterproto.message_field(3)
    links: List[str] = betterproto.string_field(4)
    page_number: int = betterproto.int32_field(5)
    version: int = betterproto.int64_field(8)


@dataclass
class AudioProto(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: "AssetTypeProto" = betterproto.enum_field(2)
    uploaded_time: datetime = betterproto.message_field(3)
    file: "AssetFileProto" = betterproto.message_field(4)
    metadata: "AudioMetadataProto" = betterproto.message_field(5)
    external_ids: Dict[str, str] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    project_id: str = betterproto.string_field(7)
    version: int = betterproto.int64_field(8)
    description: "AssetDescriptionProto" = betterproto.message_field(9)
    preview_url: str = betterproto.string_field(10)


@dataclass
class AudioMetadataProto(betterproto.Message):
    sample_rate: int = betterproto.int32_field(1)
    channels_count: int = betterproto.int32_field(2)
    duration: timedelta = betterproto.message_field(3)
    audio_compressor: str = betterproto.string_field(4)
    creation_time: datetime = betterproto.message_field(5)
    last_modified_time: datetime = betterproto.message_field(6)


@dataclass
class VideoProto(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: "AssetTypeProto" = betterproto.enum_field(2)
    uploaded_time: datetime = betterproto.message_field(3)
    file: "AssetFileProto" = betterproto.message_field(4)
    metadata: "VideoMetadataProto" = betterproto.message_field(5)
    external_ids: Dict[str, str] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    project_id: str = betterproto.string_field(7)
    version: int = betterproto.int64_field(8)
    description: "AssetDescriptionProto" = betterproto.message_field(9)
    preview_url: str = betterproto.string_field(10)


@dataclass
class VideoMetadataProto(betterproto.Message):
    duration: timedelta = betterproto.message_field(1)
    height: int = betterproto.int32_field(2)
    width: int = betterproto.int32_field(3)
    y_resolution: int = betterproto.int32_field(4)
    x_resolution: int = betterproto.int32_field(5)
    frame_rate: float = betterproto.float_field(6)
    preferred_volume: float = betterproto.float_field(7)
    audio_sample_rate: int = betterproto.int32_field(8)
    audio_format: str = betterproto.string_field(9)
    video_compressor: str = betterproto.string_field(10)
    average_bit_rate: float = betterproto.float_field(11)


@dataclass
class AssetFileProto(betterproto.Message):
    url: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    path: str = betterproto.string_field(3)
    md5checksum: str = betterproto.string_field(4)
    site_in_bytes: int = betterproto.int64_field(5)
    mime_type: str = betterproto.string_field(6)


@dataclass
class AssetOwnershipProto(betterproto.Message):
    owner_name: str = betterproto.string_field(1)
    creator_name: str = betterproto.string_field(2)
    copy_right: str = betterproto.string_field(3)
    provider: str = betterproto.string_field(4)


@dataclass
class AssetDescriptionProto(betterproto.Message):
    title: str = betterproto.string_field(1)
    short_abstract: str = betterproto.string_field(2)
    keywords: List[str] = betterproto.string_field(3)


@dataclass
class AssetPreviewImageProto(betterproto.Message):
    url: str = betterproto.string_field(1)
    short_description: str = betterproto.string_field(2)
